#!/usr/bin/env bash

get_battery_status() {
    local POWER_SUPPLY_PATH="/sys/class/power_supply"

    local ac_path=''
    local battery_paths=()
    local ps_type
    local ac_online=0

    for ps_path in $POWER_SUPPLY_PATH/*; do
        ps_type=$(cat "$ps_path/type")
        case $ps_type in
            'Mains')
                ac_path=$ps_path
                ;;
            'Battery')
                battery_paths+=($ps_path)
                ;;
        esac
    done


    if [ -f "${ac_path}/online" ]; then
        ac_online=$(cat "${ac_path}/online")
    fi

    local battery_level=0
    local battery_max=0
    for battery_path in "${battery_paths[@]}"; do
        battery_level=$(($battery_level + $(cat "${battery_path}/energy_now")))
        battery_max=$(($battery_max + $(cat "${battery_path}/energy_full")))
    done

    local battery_percentage=$((${battery_level} * 100 / ${battery_max}))

    echo -e "${ac_online}${battery_percentage}"
}

fire_battery_alert() {
    local battery_status=$1
    local ac=${battery_status:0:1}
    local battery_percentage=${battery_status:1}

    local threshold_low=10
    local threshold_critically_low=5
    local threshold_suspend=3

    local msgid_low=243595
    local msgid_critically_low=669326

    if [[ $ac -eq 1 ]]; then
        dunstify --close $msgid_low
        dunstify --close $msgid_critically_low
    elif [[ $battery_percentage -le $threshold_suspend ]]; then
        systemctl suspend
    elif [[ $battery_percentage -le $threshold_critically_low ]]; then
        dunstify --urgency critical                        \
                 --hints int:value:${battery_percentage}   \
                         "Battery: ${battery_percentage}%" \
                 --replace $msgid_critically_low           \
                 --icon battery-empty-symbolic
    elif [[ $battery_percentage -le $threshold_low ]]; then
        dunstify --urgency normal                          \
                 --hints int:value:${battery_percentage}   \
                         "Battery: ${battery_percentage}%" \
                 --replace $msgid_low                      \
                 --icon battery-low-symbolic
    fi
}

check_battery() {
    local battery_percentage=$(get_battery_status)
    fire_battery_alert $battery_percentage
}

# monitor battery
while :; do
    check_battery

    sleep 60 || break
done &

udevadm monitor --udev --subsystem-match power_supply |
    while read event; do
        check_battery
    done &
