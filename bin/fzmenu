#!/usr/bin/env python

import os
import signal
import subprocess
import tempfile

from gi.repository import Gio

# Returns a list of DesktopAppInfo objects (see docs)
all_apps = Gio.AppInfo.get_all()

name_file_dict = {}

with tempfile.NamedTemporaryFile(mode='a+t') as file:
    for app in all_apps:
        if not app.get_nodisplay():
            app_display_name = app.get_display_name()
            app_desktop_file = os.path.basename(app.get_filename())

            name_file_dict[app_display_name] = app_desktop_file

            file.write(app_display_name)
            file.write(os.linesep)

    # reset the file
    file.seek(0)

    try:
        with subprocess.Popen([                     \
                                "fzf",              \
                                "--reverse",        \
                                "--no-info",        \
                                "--border",         \
                                "--prompt", "Run: " \
                               ],                   \
                              stdin=file, stdout=subprocess.PIPE) as proc:
            selected_app_display_name = proc.communicate()[0].decode('utf-8').rstrip()
            selected_app_desktop_file = name_file_dict[selected_app_display_name]

        # kill the kitty process that runs this script
        os.kill(os.getppid(), signal.SIGHUP)

        with subprocess.Popen(["gtk-launch", selected_app_desktop_file], start_new_session=True) as proc:
            proc.communicate()
    except Exception:
        pass
