# set history options
HISTSIZE=20000
HISTFILESIZE=20000

setopt AUTO_CD
setopt AUTO_PUSHD
setopt BANG_HIST
setopt COMPLETE_IN_WORD
setopt CORRECT
setopt CORRECT_ALL
setopt EXTENDED_HISTORY
setopt HIST_BEEP
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt PROMPT_SUBST
setopt SHARE_HISTORY

# define user specific aliases and functions
alias ls="gls --color=always --group-directories-first --indicator-style=slash --time-style=long-iso -v"
alias ll="ls -l --classify --size"
alias la="ls -l --classify --size --all"

alias rm="grm --interactive"
alias cp="gcp --interactive"
alias mv="gmv --interactive"

alias bc="bc --mathlib"

alias diff="diff --color=always"

alias grep="grep --color=always"
alias egrep="egrep --color=always"
alias fgrep="fgrep --color=always"

alias less="LESSHISTFILE=- less -FXR --mouse --wheel-lines=3"
alias rsync="rsync --progress"

emacs() {
    local files=$(printf '"%s" ' "$@")
    local lisp="
    (progn
        (xterm-mouse-mode +1)
        (when '($@)
            (mapc #'find-file '($files))))
    "

    /Applications/Emacs.app/Contents/MacOS/bin/emacsclient \
        -nw --quiet --eval "$lisp" 2> /dev/null

    [ $? != 0 ] && /Applications/Emacs.app/Contents/MacOS/emacs-nw "$@"
}

# enable autoloads
autoload -Uz add-zsh-hook

# autojump
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*' recent-dirs-default yes
zstyle ':completion:*' recent-dirs-insert always
alias j=cdr

# enable auto-completion
autoload -Uz compinit
compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'

# key binds
bindkey -M viins '^R' history-incremental-search-backward
bindkey -M vicmd '^R' history-incremental-search-backward

# customize shell prompt
autoload -Uz vcs_info
add-zsh-hook precmd vcs_info

zstyle ':vcs_info:*'                  enable            git
zstyle ':vcs_info:*'                  check-for-changes true
zstyle ':vcs_info:*'                  stagedstr         '%F{yellow}'
zstyle ':vcs_info:*'                  unstagedstr       '%F{red}'
zstyle ':vcs_info:git:*'              formats           '%F{green}%u%c* %b%f'
zstyle ':vcs_info:git:*'              actionformats     '%u%c%b (%F{blue}%a%f)'
zstyle ':vcs_info:git*+set-message:*' hooks             git-untracked

# https://github.com/zsh-users/zsh/blob/f9e9dce5443f323b340303596406f9d3ce11d23a/Misc/vcs_info-examples#L155-L170
+vi-git-untracked() {
    if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
        git status --porcelain | grep '??' &> /dev/null ; then
        hook_com[unstaged]+='%F{red}'
    fi
}

# add a newline before each prompt
precmd() {
    echo
}

# set the prompt using anonymous function
() {
    local p=''
    p+='%F{magenta}%T%f %F{blue}%n%f@%m:%F{blue}%~%f ${vcs_info_msg_0_}'
    p+=$'\n'
    p+='%(?.%F{green}.%F{red})%#%f '

    PROMPT="$p"
}

